3: At all FALs, all assertions SHALL be used with a federation protocol as described in Sec. 5.
3: All assertions SHALL comply with the detailed requirements in Sec. 6.
3: All assertions SHALL be presented using one of the methods described in Sec. 7. Examples of assertions used in federated protocols include the ID Token in OpenID Connect [OIDC] and assertions written in the Security Assertion Markup Language [SAML].
3: At all FALs, the IdP SHALL employ appropriately tailored security controls (to include control enhancements) from the moderate or high baseline of security controls defined in [SP800-53] or equivalent federal (e.g., [FEDRAMP]) or industry standard.
4.1.: At FAL1, the assertion being generated by the IdP SHALL meet a core set of requirements defined in Sec. 6, including protection against modification or construction by an attacker by having the assertion contents signed by the IdP using approved cryptography.
4.1.: An RP SHALL verify the origin and integrity of the assertion upon receipt, as discussed in Sec. 6, ensuring that the assertion has originated from the expected source.
4.1.: All assertions at FAL1 SHALL be audience-restricted to a specific RP or set of RPs, and the RP SHALL validate that it is one of the targeted RPs for the given assertion.
4.1.: The IdP SHALL ensure that any party holding the assertion, including the RP, is unable to impersonate the IdP at a non-targeted RP by protecting the assertion with a signature and key using approved cryptography.
4.1.: If the assertion is protected by a keyed message authentication code (MAC) using a shared key, the IdP SHALL use a different shared key for each RP.
4.2.: At FAL2, the assertion SHALL also be strongly protected from being injected by an attacker.
4.2.: If front channel presentation is used as discussed in Sec. 7.2, additional injection protections SHALL be implemented by the RP.
4.2.: At FAL2, the trust agreement between the IdP and RP SHALL be established statically, including establishing limits of which attributes are made available to the RP and for what purpose.
4.2.: Government-operated IdPs asserting authentication at FAL2 SHALL protect keys used for signing or encrypting those assertions with mechanisms validated at [FIPS140]
4.3.: At FAL3, the subscriber SHALL authenticate to the RP by presenting an authenticator directly to the RP in addition to presenting an assertion.
4.3.: At FAL3, the trust agreement and registration between the IdP and RP SHALL be established statically.
4.3.: All identifying key material and federation parameters for all parties (including the list of attributes sent to the RP) SHALL be fixed ahead of time, before the federated authentication process can take place.
4.3.: IdPs asserting authentication at FAL3 SHALL protect keys used for signing or encrypting those assertions with mechanisms validated at [FIPS140]
4.4.: The RP SHALL be informed of the following information for each federated transaction:
4.4.: If the xAL is unchanging for all messages between the IdP and RP, the xAL information SHALL be included in the parameters of the trust agreement between the IdP and RP.
4.4.: If the xAL varies, the information SHALL be included as part of the assertion as discussed in Sec.
4.4.: The RP SHALL determine the minimum IAL, AAL, and FAL it is willing to accept for access to any offered functionality.
4.4.: Consequently, the RP SHALL consider the IdP’s declaration of the IAL and AAL as the sole source of these levels for a given federated transaction.
4.4.: The RP SHALL ensure that the federation transaction meets the requirements of the FAL declared in the assertion.
4.4.: IdPs SHALL support a mechanism for RPs to specify a set of minimum acceptable xALs as part of the trust agreement and SHOULD support the RP specifying a more strict minimum set at runtime as part of the federation transaction.
4.4.: When an RP requests a particular xAL, the IdP SHOULD fulfill that request, if possible, and SHALL indicate the resulting xAL in the assertion.
5.1.: Trust agreements SHALL establish the following parameters:
5.1.: The parameters of static trust agreements SHALL be available to all parties in the agreement, including the operator of the IdP, the operator of the RP, and affected subscribers.
5.1.: The parameters of a dynamic trust agreement SHALL be disclosed to the subscriber by the RP and the IdP during the federation transaction.
5.1.: Disclosure of attributes in dynamic trust agreements SHALL be subject to a runtime decision from the subscriber and SHALL NOT be subject to an allowlist at the IdP.
5.1.1.: The IdP SHALL disclose its supported IAL, AAL, and FAL levels to the RP.
5.1.1.: The RP SHALL disclose its list of required attributes to the IdP, including its purpose for use of each requested attribute.
5.1.1.: The RP SHALL communicate its required IAL, AAL, and FAL to the IdP, including whether no claim is required for IAL or AAL.
5.1.1.: The IdP SHALL transmit only those attributes that were explicitly requested by the RP.
5.1.1.: RPs SHALL include their requested attributes in their privacy risk assessment.
5.1.2.: Federation authorities SHALL establish parameters regarding expected and acceptable IALs, AALs, and FALs in connection with the federated relationships they enable.
5.1.2.: Federation authorities SHALL individually vet each participant in the federation to determine whether they adhere to their expected standards.
5.1.2.: Vetting of IdPs and RPs SHALL establish, as a minimum, that:
5.1.3.: Therefore, all normative requirements that apply to IdPs and RPs SHALL apply to proxies in their respective roles.
5.1.3.: Federations presented through a proxy SHALL be represented by the lowest FAL used during the proxied transaction.
5.1.3.: The proxy SHALL communicate this aspect to the RP either at runtime or through preconfiguration as part of the trust agreement.
3.: Protocols requiring the transfer of keying information SHALL use a secure method during the registration process to exchange keying information needed to operate the federated relationship, including any shared secrets or public keys.
3.: Any symmetric keys used in this relationship SHALL be unique to a pair of federation participants.
3.: Federation relationships SHALL establish parameters regarding expected and acceptable IALs and AALs in connection with the federated relationship.
5.2.2.: IdPs that support dynamic registration SHALL make their configuration information (such as dynamic registration endpoints) available in such a way as to minimize system administrator involvement.
4.: Protocols requiring the transfer of keying information SHALL use a secure method during the registration process to establish such keying information needed to operate the federated relationship, including any shared secrets or public keys.
4.: Any symmetric keys used in this relationship SHALL be unique to a pair of federation participants.
5.3.: The decision of whether an authentication can occur or attributes may be passed SHALL be determined by the authorized party stipulated by the trust agreement, through use of an allowlist, a blocklist, or a runtime decision.
5.3.: A subscriber’s attributes SHALL be transmitted between IdP and RP only for identity federation transactions or support functions such as identification of compromised subscriber accounts as discussed in Sec. 5.5.
5.3.: A subscriber’s attributes SHALL NOT be used by the RP for purposes other than those stipulated in the trust agreement.
5.3.: The subscriber SHALL be informed of the transmission of attributes to an RP.
5.3.: In the case where the authorized party is the organization, the organization SHALL make available to the subscriber the list of approved RPs and the associated sets of attributes sent to those RPs.
5.3.: In the case where the authorized party is the subscriber, the subscriber SHALL be prompted prior to release of attributes using a runtime decision at the IdP as described in Sec. 5.3.3.
5.3.: The IdP SHALL provide effective mechanisms for redress of subscriber complaints or problems (e.g., subscriber identifies an inaccurate attribute value).
5.3.1.: When placing an RP on its allowlist, the IdP SHALL ensure that the RP abides by all applicable provisions and requirements in the SP 800-63 guidelines.
5.3.1.: The IdP SHALL determine which identity attributes are passed to the allowlisted RP upon authentication.
5.3.1.: IdPs SHALL make allowlists available to subscribers as described in Sec. 9.2.
5.3.1.: IdP allowlists SHALL uniquely identify RPs through the means of domain names, cryptographic keys, or other identifiers applicable to the federation protocol in use.
5.3.1.: Any entities that share an identifier SHALL be considered equivalent for the purposes of the allowlist.
5.3.2.: If an RP is on an IdP’s blocklist, the IdP SHALL NOT produce an assertion targeting the RP in question under any circumstances.
5.3.2.: IdP blocklists SHALL uniquely identify RPs through the means of domain names, cryptographic keys, or other identifiers applicable to the federation protocol in use.
5.3.2.: Any entities that share an identifier SHALL be considered equivalent for the purposes of the blocklist.
5.3.3.: Every RP that is in a trust agreement with an IdP but not on an allowlist or a blocklist with that IdP SHALL be governed by a default policy in which runtime authorization
5.3.3.: The IdP SHALL provide the authorized party with explicit notice and prompt them for positive confirmation before any attributes about the subscriber are transmitted to the RP.
5.3.3.: The IdP SHALL disclose which attributes will be released to the RP if the transaction is approved.
5.3.3.: If the federation protocol in use allows for optional attribute disclosure at runtime, the authorized party SHALL be given the option to decide whether to transmit specific attributes to the RP without terminating the federation transaction entirely.
5.3.3.: To mitigate the risk of unauthorized exposure of sensitive information (e.g., shoulder surfing), the IdP SHALL , by default, mask sensitive information displayed to the authorized party.
5.3.3.: If the authorized party is the subscriber, the IdP SHALL provide mechanisms for the subscriber to temporarily unmask such information in order for the subscriber to view full values before transmission.
5.3.3.: If such a mechanism is provided, the IdP SHALL allow the authorized party to revoke such remembered access at a future time.
5.3.4.: When placing an IdP in its allowlist, the RP SHALL ensure that the IdP abides by the provisions and requirements in these guidelines.
5.3.4.: RP allowlists SHALL uniquely identify IdPs through the means of domain names, cryptographic keys, or other identifiers applicable to the federation protocol in use.
5.3.5.: RP blocklists SHALL uniquely identify IdPs through the means of domain names, cryptographic keys, or other identifiers applicable to the federation protocol in use.
5.3.6.: Every IdP that is in a trust agreement with an RP but not on an allowlist or a blocklist with that RP SHALL be governed by a default policy in which runtime authorization
5.3.6.: If such a mechanism is provided, the RP SHALL allow the authorized party to revoke such remembered options at a future time.
5.4.: The RP subscriber account SHALL be bound to at least one federated identifier, and a given federated identifier is bound to only one RP subscriber account at a given RP.
5.4.: Termination SHALL include unbinding any federated identifiers and bound authenticators as well as removing attributes and information associated with the account except what is required for auditing and security purposes.
5.4.: An authenticated session SHALL be created by the RP only when the RP has processed and verified a valid assertion from the IdP that is the issuer of the federated identifier associated with the RP subscriber account.
5.4.: If the assertion also requires presentation of a bound authenticator at FAL3, the bound authenticator SHALL also be presented and processed before the RP subscriber account is associated with an authenticated session, as discussed in Sec. 6.1.2.
5.4.1.: However, in all cases, the RP subscriber account SHALL be provisioned at the RP prior to the establishment of an authenticated session at the RP in one of the following ways:
5.4.1.: However, in such systems, the RP SHALL be responsible for managing any cached attributes it might have.
5.4.1.: Pre-provisioned accounts SHALL be bound to a federated identifier at the time of provisioning.
5.4.1.: The details of any alternative provisioning model SHALL be included in the privacy risk assessments of the IdP and RP.
5.4.1.: All organizations SHALL document their provisioning model as part of their trust agreement.
5.4.2.: Upon receiving such a signal, the RP SHALL terminate the RP subscriber account and remove all personal information associated with the RP subscriber account, except what is required for audit and security purposes.
5.4.3.: The attributes in the provisioning API available to a given RP SHALL be limited to only those necessary for the RP to perform its functions.
5.4.3.: As part of establishing the trust agreement, the IdP SHALL document when an RP is given access to a provisioning API including at least the following:
5.4.3.: The IdP SHALL require authentication from the RP for any pull-based access to a provisioning API.
5.4.3.: The RP SHALL require authentication from the IdP for any pushbased access to a provisioning API.
5.4.3.: A provisioning API SHALL NOT be made available under a dynamic or implicit trust agreement.
5.4.3.: The IdP SHALL NOT make a provisioning API available to any RP outside of an established trust agreement.
5.4.3.: The IdP SHALL provide access to a provisioning API only as part of a federated identity relationship with an RP to facilitate federated transactions with that RP and related functions such as signaling revocation of the subscriber account.
5.4.3.: The IdP SHALL revoke an RP’s access to the provisioning API once access is no longer required by the RP for its functioning purposes or when the trust agreement is terminated.
5.4.3.: Any provisioning API provided to the RP SHALL be under the control and jurisdiction of the IdP.
5.4.3.: When a provisioning API is in use, the IdP SHALL signal to the RP when a subscriber account has been terminated.
5.4.3.: When receiving such a signal, the RP SHALL terminate the associated RP subscriber account.
5.4.4.: All attributes associated with an RP subscriber account, regardless of their source, SHALL be removed when the RP subscriber account is terminated.
5.4.4.: The RP SHALL disclose to the subscriber the purpose for collection of any additional attributes.
5.4.4.: These attributes SHALL be used solely for the stated purposes of the RP’s functionality and SHALL NOT have any secondary use, including communication of said attributes to other parties.
5.4.4.: An RP SHALL disclose any additional attributes collected, and their use, as part of its System of Records Notice (SORN).
5.4.4.: The RP SHALL provide an effective means of redress for the subscriber to update and remove these additionally-collected attributes from the RP subscriber account.
5.4.5.: When processing such an inactive account, the RP SHALL provide sufficient notice to the subscriber, if possible, about the pending termination of the account and provide the subscriber with an option to re-activate the account prior to its scheduled termination.
5.4.5.: Upon termination, the RP SHALL remove all personal information associated with the RP subscriber account, except what is required for audit and security purposes.
5.5.: If an IdP discloses information on subscriber activities at an RP to any party, or processes the subscriber’s attributes for any purpose other than identity proofing, authentication, or attribute assertions (collectively “identity service”), related fraud mitigation, to comply with law or legal process, or, in the case of a specific user request, to transmit the information, the IdP SHALL implement measures to maintain predictability and manageability commensurate with the privacy risk arising from the additional processing.
5.5.: SHALL NOT make consent for the additional processing a condition of the identity service.
5.5.: RPs that receive such a signal from the IdP SHALL terminate the RP subscriber account and remove all personal information associated with the RP subscriber account, except what is required for audit and security purposes.
4.: If the RP subscriber account lifecycle process gives the RP access to attributes through a provisioning API as discussed in Sec. 5.4.3, additional privacy measures SHALL be implemented given the wide nature of information access.
4.: As a consequence, when a provisioning API is used, the IdP SHALL minimize the attributes made available to the RP.
4.: To prevent the transmission of attributes for users that will never use an RP, the IdP SHALL limit the population of subscriber accounts available via the provisioning API to the population of subscribers authorized to use the RP by the trust agreement.
5.6.: The RP SHALL NOT assume that the subscriber has an active session at the IdP past the issuance time of the assertion.
5.6.: The IdP SHALL NOT assume that termination of the subscriber’s session at the IdP will propagate to any sessions that subscriber would have at downstream RPs.
5.6.: SHALL communicate any information it has regarding the time of the subscriber’s
5.6.: An RP requiring authentication through a federation protocol SHALL specify the maximum acceptable authentication age to the IdP, either through the federation protocol (if possible) or through the parameters of the trust agreement.
5.6.: The authentication age represents the time since the last authentication event in the subscriber’s session at the IdP, and the IdP SHALL reauthenticate the subscriber if they have not been authenticated within that time period.
5.6.: The IdP SHALL communicate the authentication event time to the RP to allow the RP to decide if the assertion is sufficient for authentication at the RP and to determine the time for the next reauthentication event.
5.6.: As a consequence, the RP’s ability to successfully fetch additional attributes through an identity API SHALL NOT be used to establish a session at the RP.
5.7.: The use of any shared signaling SHALL be documented in the trust agreement between the IdP and RP.
5.7.: Signaling from the IdP to the RP SHALL require a static trust agreement.
5.7.: Any use of shared signaling SHALL be documented and made available to the authorized party stipulated by the trust agreement.
5.7.: This documentation SHALL include the events under which a signal is sent, the information included in such a signal (including any attribute information), and any additional parameters sent with the signal.
5.7.: The use of shared signaling SHALL be subject to privacy review under the trust agreement.
6.: Assertions SHALL represent a discrete authentication event of the subscriber at the IdP and SHALL be processed as a discrete authentication event at the RP.
6.: All assertions SHALL include the following attributes:
11.: If the assertion is used at FAL3 with a bound authenticator as described in Sec. 6.1.2, the assertion SHALL include the following:
2.: All metadata within the assertion SHALL be validated by the RP upon receipt:
2.: An RP SHALL treat subject identifiers as not inherently globally unique.
2.: Assertion validity time windows SHALL NOT be used to limit the session at the RP.
6.1.2.: A bound authenticator SHALL be unique per subscriber at the RP such that two subscribers cannot present the same authenticator for their separate RP subscriber accounts.
6.1.2.: All bound authenticators SHALL be phishing resistant.
6.1.2.: The RP SHALL accept authentication from a bound authenticator only in the context of processing an assertion.
6.1.2.1.: When the bound authenticator is managed by the IdP as in Fig. 9, a unique identifier for the authenticator (such as its public key) SHALL be included in the assertion presented to the RP.
6.1.2.1.: The RP SHALL prompt the subscriber to prove possession of the identified bound authenticator.
6.1.2.1.: SHALL be phishing resistant and SHALL be independently dereferenceable by the RP
6.1.2.2.: When the bound authenticator is managed by the RP as in Fig. 10, the IdP SHALL include an indicator in the assertion that the assertion is to be used with a bound authenticator at FAL3.
6.1.2.2.: The unique identifier for the authenticator (such as its public key) SHALL be stored in the RP subscriber account.
6.1.2.2.: For RP-provided authenticators, the administrator of the RP SHALL issue the authenticator to the subscriber directly for use with an FAL3 login.
6.1.2.2.: The administrator of the RP SHALL store a unique identifier for the bound authenticator in the RP subscriber account.
6.1.2.2.: The administrator of the RP SHALL determine through independent means that the party to which the authenticator is issued is the identified subject of the RP subscriber account.
6.1.2.2.: For subscriber-provided authenticators, if no bound authenticators are associated with the RP subscriber account, the RP SHALL perform a binding ceremony to establish the connection between the authenticator, the subscriber, and the RP subscriber account as shown in Fig. 11.
6.1.2.2.: The RP SHALL first establish an authenticated session using federation
6.1.2.2.: The subscriber SHALL immediately be prompted to present and authenticate with the proposed authenticator.
6.1.2.2.: Upon successful presentation of the authenticator, the RP SHALL store a unique identifier for the authenticator (such as its public key) and associate this
6.1.2.2.: The binding ceremony session SHALL have a timeout of five minutes or less.
6.1.2.2.: Upon successful completion of the binding ceremony, the RP SHALL immediately request a new assertion from the IdP at FAL3, including prompting the subscriber for the newly-bound authenticator.
6.1.2.2.: The subscriber SHALL first be prompted to present an existing bound authenticator to reach FAL3.
6.1.2.2.: Upon successful authentication, the RP SHALL immediately prompt the subscriber for the newly-bound authenticator.
6.1.2.2.: When a bound authenticator is unbound, the RP SHALL terminate all current FAL3 sessions for the subscriber and SHALL require reauthentication of the subscriber from the IdP.
6.1.2.2.: The RP SHALL notify the subscriber through an out-of-band mechanism, and SHOULD notify the IdP using a shared signaling system (see Sec. 5.7), if any of the following events occur:
6.2.: Independent of the binding mechanism (discussed in Sec. 6.1) or the federation model used to obtain them (described in Sec. 5.1), assertions SHALL include a set of protections to prevent attackers from manufacturing valid assertions or reusing captured assertions at disparate RPs.
6.2.1.: Assertions SHALL be sufficiently unique to permit unique identification by the target RP.
6.2.2.: Assertions SHALL be cryptographically signed by the issuer (IdP).
6.2.2.: The RP SHALL validate the digital signature or MAC of each such assertion based on the issuer’s key.
6.2.2.: This signature SHALL cover the entire assertion, including its identifier, issuer, audience, subject, and expiration.
6.2.2.: The assertion signature SHALL either be a digital signature using asymmetric keys or a MAC using a symmetric key shared between the RP and issuer.
6.2.2.: Shared symmetric keys used for this purpose by the IdP SHALL be independent for each RP to which they send assertions, and are normally established during registration of the RP.
6.2.2.: Public keys for verifying digital signatures SHALL be transferred to the RP in a secure manner, and
6.2.2.: Approved cryptography SHALL be used.
6.2.3.: When encrypting assertions, the IdP SHALL encrypt the contents of the assertion using either the RP’s public key or a shared symmetric key.
6.2.3.: Shared symmetric keys used for this purpose by the IdP SHALL be independent for each RP to which they send assertions, and are normally established during registration of the RP.
6.2.3.: Public keys for encryption SHALL be securely transferred to the IdP and MAY be fetched by the IdP in a secure fashion at runtime, such as through an HTTPS URL hosted by the RP.
6.2.3.: All encryption of assertions SHALL use approved cryptography.
6.2.3.: When personally-identifiable information is included in the assertion and the assertion is handled by intermediaries such as a browser, the federation protocol SHALL encrypt assertions to protect the sensitive information in the assertion from leaking to unintended parties.
6.2.4.: Assertions SHALL use audience restriction techniques to allow an RP to recognize whether or not it is the intended target of an issued assertion.
6.2.4.: All RPs SHALL check that the audience of an assertion contains an identifier for their RP to prevent the injection and replay of an assertion generated for one RP at another RP.
6.2.5.1.: When using pairwise pseudonymous identifiers within the assertions generated by the IdP for the RP, the IdP SHALL generate a different federated identifier for each RP as described in Sec. 6.2.5.2 below.
6.2.5.1.: The proxy SHALL NOT disclose the mapping between the pairwise pseudonymous identifier and any other identifiers to a third party or use the information for any purpose other than federated authentication, related fraud mitigation, to comply with law or legal process, or in the case of a specific user request for the information.
6.2.5.2.: Pairwise pseudonymous identifiers SHALL contain no identifying information about the subscriber.
6.2.5.2.: They SHALL also be unguessable by a party having access to some information identifying the subscriber.
6.2.5.2.: Normally, the identifiers SHALL only be known by and used by one pair of endpoints (e.g., IdP-RP).
6.2.5.2.: The RPs SHALL conduct a privacy risk assessment to consider the privacy risks associated with requesting a common identifier.
6.2.5.2.: The IdP SHALL ensure that only intended RPs are correlated; otherwise, a rogue RP could learn of the pseudonymous identifier for a set of correlated RPs by fraudulently posing as part of that set.
6.3.: Access to the identity API SHALL be time limited.
6.3.: SHALL NOT be sufficient for the establishment of an authenticated session at the RP.
6.3.: However, when access to the identity API is granted within the context of a federation transaction, the attributes provided by an identity API SHALL be associated with only the single subscriber identified in the associated assertion.
6.3.: SHALL include the subject identifier for the subscriber.
6.3.1.: The RP SHALL verify that the identified attribute provider is capable of providing the kinds of attributes that are present, under the auspices of the applicable trust agreement.
7.1.: The assertion reference itself contains no information about the subscriber and SHALL be resistant to tampering and fabrication by an attacker.
5.: The RP SHALL protect itself against injection of manufactured or captured assertion references by use of cross-site scripting protection or other accepted techniques.
5.: Conveyance of the assertion reference from the IdP to the subscriber, as well as from the subscriber to the RP, SHALL be made over an authenticated protected channel.
5.: Conveyance of the assertion reference from the RP to the IdP, as well as the assertion from the IdP to the RP, SHALL be made over an authenticated protected channel.
5.: When assertion references are presented, the IdP SHALL verify that the party presenting the assertion reference is the same party that requested the authentication.
7.2.: The RP SHALL protect itself against injection of manufactured or captured assertions by use of cross-site scripting protection and other accepted techniques.
7.2.: Conveyance of the assertion from the IdP to the subscriber, as well as from the subscriber to the RP, SHALL be made over an authenticated protected channel.
7.3.: Communications between the IdP and the RP SHALL be protected in transit using an authenticated protected channel.
7.3.: Communications between the subscriber and either the IdP or the RP (usually through a browser) SHALL be made using an authenticated protected channel.
7.3.: The RP SHALL , where feasible, request derived attribute values rather than full attribute values as described in Sec. 9.3.
7.3.: The IdP SHALL support derived attribute values to the extent possible.
12.3.: • exp - The timestamp at which the ID Token expires and after which SHALL NOT be accepted the client.
12.3.: • iat - The timestamp at which the ID Token was issued and before which SHALL NOT be accepted by the client.